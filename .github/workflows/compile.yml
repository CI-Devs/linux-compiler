name: Manually Triggered Kernel Build
on:
  workflow_dispatch:
    inputs:
      architecture:
        description: 'The target architecture for the build'
        required: true
        default: 'x86'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests bs4

      - name: Get latest kernel version
        id: get_kernel
        run: |
          python get_latest_kernel.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download and compile Linux Kernel
        run: |
          wget https://www.kernel.org/pub/linux/kernel/v5.x/linux-${{ steps.get_kernel.outputs.version }}.tar.xz
          tar -xf linux-${{ steps.get_kernel.outputs.version }}.tar.xz
          cd linux-${{ steps.get_kernel.outputs.version }}
          make ARCH=${{ github.event.inputs.architecture }} allmodconfig
          make ARCH=${{ github.event.inputs.architecture }} -j$(nproc)
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_kernel.outputs.version }}-${{ github.event.inputs.architecture }}
          release_name: Linux Kernel ${{ steps.get_kernel.outputs.version }} for ${{ github.event.inputs.architecture }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-${{ steps.get_kernel.outputs.version }}/linux-${{ steps.get_kernel.outputs.version }}-${{ github.event.inputs.architecture }}.tar.gz
          asset_name: linux-${{ steps.get_kernel.outputs.version }}-${{ github.event.inputs.architecture }}.tar.gz
          asset_content_type: application/gzip
